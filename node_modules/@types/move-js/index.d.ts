// Definitions: Zhanpeng <https://github.com/hectorpla/>
// TypeScript Version: 2.7

export default move;
// export = move;

declare function move(el: string): Move;

// partly defined
export interface Move {
  defaults: {
    duration: number;
  }

  /**
   * constructor
   */
  (el: Element): void;


  skew: (x: number, y: number) => Move;
  skewX: (x: number) => Move;
  skewY: (y: number) => Move;
  translate: (x: number, y: number) => Move;
  to: (x: number, y: number) => Move;
  translateX: (x: number) => Move;
  translateY: (y: number) => Move;
  scale: (x: number, y: number) => Move;
  scaleX: (x: number) => Move;
  scaleY: (y: number) => Move;
  /**
   * @param {n} degree
   */
  rotate: (n: number) => Move;
  // ease: see definition in lib, didn't define deep here
  ease: (fn: string) => Move;
  animate: (name: string, props: object) => Move;
  /**
   * possible input: 500 | '2s'
   */
  duration: (n: number | string) => Move;
  delay: (n: number | string) => Move;
  setProperty: (prop: string, val: string) => Move;
  setVendorProperty: (prop: string, val: string) => Move;
  set: (prop: string, val: string) => Move;
  add: (prop: string, val: string) => Move;
  sub: (prop: string, val: string) => Move;
  current: (prop: string) => Move;
  transition: (prop: string) => Move;
  // reselect the elemetn
  move: (selector: string) => Move;

  // ? is the callback defintion accurate?
  then: (fn: () => any | Move | void) => Move;
  pop: () => Move;
  reset: () => Move;
  end: (fn?: () => any) => Move;

}
